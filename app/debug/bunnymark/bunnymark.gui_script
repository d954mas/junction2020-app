local function load(self, proxy_url)
	msg.post(proxy_url, "load")
	self.current_proxy = proxy_url
end

function init(self)
	math.randomseed(os.time())
	msg.post(".", "acquire_input_focus")

	self.toggle_profiler_node = gui.get_node("toggle_profiler")
	self.back_node = gui.get_node("back")
	self.start = gui.get_node("start")
	self.menu_enabled = true
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")
		self.menu_enabled = false
	elseif message_id == hash("proxy_unloaded") then
		self.menu_enabled = true
		self.current_proxy = nil
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		if self.current_proxy and gui.pick_node(self.back_node, action.x, action.y) then
			msg.post(self.current_proxy, "unload")
		elseif gui.pick_node(self.toggle_profiler_node, action.x, action.y) then
			msg.post("@system:", "toggle_profile")
		elseif not self.current_proxy and self.menu_enabled and  gui.pick_node(self.start,action.x,action.y) then
			load(self, "#update_single_proxy")
		end
	end

end
