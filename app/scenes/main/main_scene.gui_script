local COMMON = require "libs.common"
local HAXE_WRAPPER = require "libs_project.haxe_wrapper"
local ManaPanel = require "models.view.resources.mana_panel"
local MoneyPanel = require "models.view.resources.money_panel"
local WORLD = require "libs_project.words"
local GUI = require "libs_project.gui.gui"

local Script = COMMON.new_n28s()

function Script:bind_vh()
    self.vh = {
        root = gui.get_node("root"),
        lbl_turn = gui.get_node("lbl_turn"),
        price_knight = gui.get_node("btn_spawn_knight/lbl_price"),
        price_archer = gui.get_node("btn_spawn_archer/lbl_price"),
        price_spearman = gui.get_node("btn_spawn_spearman/lbl_price"),
        price_shield = gui.get_node("btn_spawn_shield/lbl_price"),
        price_mage = gui.get_node("btn_spawn_mage/lbl_price"),


        price_cast_fireball = gui.get_node("btn_cast_fireball/lbl_price"),
        price_cast_ice = gui.get_node("btn_cast_ice/lbl_price"),
        price_cast_mana = gui.get_node("btn_cast_mana/lbl_price"),
        price_cast_caravan = gui.get_node("btn_cast_caravan/lbl_price"),

        panel_units = gui.get_node("panel_units"),
        panel_mage = gui.get_node("panel_mage"),
    }
    self.views = {
        mana_panel = ManaPanel("mana_panel", WORLD),
        money_panel = MoneyPanel("money_panel", WORLD),
        btn_skip = GUI.ButtonIconTest("btn_skip"),
        btn_spawn_knight = GUI.ButtonScale("btn_spawn_knight"),
        btn_spawn_archer = GUI.ButtonScale("btn_spawn_archer"),
        btn_spawn_spearman = GUI.ButtonScale("btn_spawn_spearman"),
        btn_spawn_shield = GUI.ButtonScale("btn_spawn_shield"),
        btn_spawn_mage = GUI.ButtonScale("btn_spawn_mage"),

        btn_cast_fireball = GUI.ButtonScale("btn_cast_fireball"),
        btn_cast_ice = GUI.ButtonScale("btn_cast_ice"),
        btn_cast_mana = GUI.ButtonScale("btn_cast_mana"),
        btn_cast_caravan = GUI.ButtonScale("btn_cast_caravan"),

        btn_send_caravan = GUI.ButtonScale("btn_send_caravan"),

        btn_change = GUI.ButtonIconTest("btn_change"),
    }
end

function Script:init()
    COMMON.CONTEXT:register(COMMON.CONTEXT.NAMES.MAIN_SCENE_GUI)
    COMMON.input_acquire()
    self:bind_vh()
    self:init_gui()
    self:change_tab("units")
end

function Script:change_tab(tab)
    self.tab = tab
    if (tab == "units") then
        gui.set_enabled(self.vh.panel_mage, false)
        gui.set_enabled(self.vh.panel_units, true)
    elseif (tab == "skills") then
        gui.set_enabled(self.vh.panel_mage, true)
        gui.set_enabled(self.vh.panel_units, false)
    end
end

function Script:init_gui()
    self.views.mana_panel:set_value(HAXE_WRAPPER.resources_get_mana(), true)
    self.views.money_panel:set_value(HAXE_WRAPPER.resources_get_money(), true)

    self.scheduler = COMMON.RX.CooperativeScheduler.create()
    self.subscriptions = COMMON.RX.SubscriptionsStorage()
    self.subscriptions:add(COMMON.EVENT_BUS:subscribe(COMMON.EVENTS.STORAGE_UPDATED):go(self.scheduler):subscribe(function()
        self:storage_changed()
    end))
    self:storage_changed()

    self.views.btn_spawn_knight:set_input_listener(function()
        interactive_canvas.send_text_query("level.spawn.unit KNIGHT")
    end)
    self.views.btn_skip:set_input_listener(function()
        interactive_canvas.send_text_query("level.turn.skip")
    end)
    self.views.btn_spawn_archer:set_input_listener(function()
        interactive_canvas.send_text_query("level.spawn.unit ARCHER")
    end)
    self.views.btn_spawn_spearman:set_input_listener(function()
        interactive_canvas.send_text_query("level.spawn.unit SPEARMAN")
    end)
    self.views.btn_spawn_mage:set_input_listener(function()
        interactive_canvas.send_text_query("level.spawn.unit MAGE")
    end)
    self.views.btn_spawn_shield:set_input_listener(function()
        interactive_canvas.send_text_query("level.spawn.unit SHIELD")
    end)

    self.views.btn_cast_fireball:set_input_listener(function()
        interactive_canvas.send_text_query("level.cast FIREBALL")
    end)
    self.views.btn_change:set_input_listener(function()
        if (self.tab == "units") then
            self:change_tab("skills")
        else
            self:change_tab("units")
        end
    end)

    self.views.btn_cast_ice:set_input_listener(function()
        interactive_canvas.send_text_query("level.cast ICE")
    end)

    self.views.btn_cast_mana:set_input_listener(function()
        interactive_canvas.send_text_query("level.cast MANA")
    end)

    self.views.btn_cast_caravan:set_input_listener(function()
        interactive_canvas.send_text_query("level.cast CARAVAN")
    end)

    self.views.btn_send_caravan:set_input_listener(function()
        interactive_canvas.send_text_query("level.spawn.caravan")
    end)

    gui.set_text(self.vh.price_archer, HAXE_WRAPPER.level_player_unit_get_price("ARCHER"))
    gui.set_text(self.vh.price_knight, HAXE_WRAPPER.level_player_unit_get_price("KNIGHT"))
    gui.set_text(self.vh.price_spearman, HAXE_WRAPPER.level_player_unit_get_price("SPEARMAN"))
    gui.set_text(self.vh.price_shield, HAXE_WRAPPER.level_player_unit_get_price("SHIELD"))
    gui.set_text(self.vh.price_mage, HAXE_WRAPPER.level_player_unit_get_price("MAGE"))

    gui.set_text(self.vh.price_cast_fireball, HAXE_WRAPPER.level_player_mage_get_price("FIREBALL"))
    gui.set_text(self.vh.price_cast_ice, HAXE_WRAPPER.level_player_mage_get_price("ICE"))
    gui.set_text(self.vh.price_cast_mana, HAXE_WRAPPER.level_player_mage_get_price("MANA"))
    gui.set_text(self.vh.price_cast_caravan, HAXE_WRAPPER.level_player_mage_get_price("CARAVAN"))
end

function Script:storage_changed()
    gui.set_text(self.vh.lbl_turn, "TURN:" .. (HAXE_WRAPPER.level_turn_get() + 1))
    self.views.mana_panel:set_value(HAXE_WRAPPER.resources_get_mana())
    self.views.money_panel:set_value(HAXE_WRAPPER.resources_get_money())

    gui.set_text(self.vh.price_cast_fireball, HAXE_WRAPPER.level_player_mage_get_price("FIREBALL"))
    gui.set_text(self.vh.price_cast_ice, HAXE_WRAPPER.level_player_mage_get_price("ICE"))
    gui.set_text(self.vh.price_cast_mana, HAXE_WRAPPER.level_player_mage_get_price("MANA"))
    gui.set_text(self.vh.price_cast_caravan, HAXE_WRAPPER.level_player_mage_get_price("CARAVAN"))
end

function Script:final()
    COMMON.CONTEXT:unregister(COMMON.CONTEXT.NAMES.MAIN_SCENE_GUI)
    COMMON.input_release()
    self.subscriptions:unsubscribe()
end

function Script:update(dt)
    self.scheduler:update(dt)
    self.views.mana_panel:update(dt)
    self.views.money_panel:update(dt)
end

function Script:on_input(action_id, action)
    self.views.btn_spawn_knight:on_input(action_id, action)
    self.views.btn_spawn_archer:on_input(action_id, action)
    self.views.btn_spawn_spearman:on_input(action_id, action)
    self.views.btn_spawn_mage:on_input(action_id, action)
    self.views.btn_spawn_shield:on_input(action_id, action)

    self.views.btn_cast_fireball:on_input(action_id, action)
    self.views.btn_cast_ice:on_input(action_id, action)
    self.views.btn_cast_caravan:on_input(action_id, action)
    self.views.btn_cast_mana:on_input(action_id, action)

    self.views.btn_send_caravan:on_input(action_id, action)

    self.views.btn_skip:on_input(action_id, action)
    self.views.btn_change:on_input(action_id, action)
end

COMMON.N28S.register(Script)